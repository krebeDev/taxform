{"version":3,"sources":["components/CheckboxGroup.js","utilities/constants.js","utilities/wordsToNumbers.js","utilities/validation.js","images/closeIcon.svg","components/TaxForm.js","components/App.js","index.js"],"names":["CheckboxGroup","items","category","setFieldValue","values","categoryRef","useRef","handleSelect","checkboxes","document","querySelectorAll","checkedCount","allChecked","i","length","checked","current","indeterminate","renderCheckBoxes","map","id","name","className","type","value","onClick","innerRef","isChecked","itemsIds","toString","mergedIds","Set","applicable_items","remainingItems","filter","item","indexOf","ITEMS","options","UNITS","one","two","three","four","five","six","seven","eight","nine","TEENS","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","X_TIES","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety","wordsToNumbers","input","transformedInput","trim","toLowerCase","test","error","x","y","wordsArray","split","wordAtFirstIndex","wordAtSecondIndex","hasOwnProperty","number","validateInputs","totalItems","applicableItems","appliedTo","applied_to","errors","numberOfApplicableItems","invalidRate","allItemsIds","bracelets","otherItems","TaxForm","handleSubmit","sleep","ms","Promise","resolve","setTimeout","validate","initialValues","rate","others","search","onSubmit","a","isSubmitting","resetForm","handleBlur","role","autoComplete","onBlur","event","handleRateOnBlur","disabled","component","placeholder","title","src","closeIcon","alt","width","height","App","payload","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4d474c0.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Field } from 'formik'\r\n\r\nconst CheckboxGroup = ({ items, category, setFieldValue, values }) => {\r\n  const categoryRef = useRef(null)\r\n\r\n  const handleSelect = () => {\r\n    const checkboxes = document.querySelectorAll(\r\n      `input[data-category=${category}]`\r\n    )\r\n    let checkedCount = 0\r\n    let allChecked = false\r\n\r\n    for (let i = 0; i < checkboxes.length; i++) {\r\n      if (checkboxes[i].checked) checkedCount++\r\n\r\n      if (checkedCount === items.length) {\r\n        allChecked = true\r\n      }\r\n\r\n      if (checkedCount > 0 && checkedCount < items.length) {\r\n        categoryRef.current.indeterminate = true\r\n      }\r\n\r\n      if (allChecked || checkedCount === 0) {\r\n        categoryRef.current.indeterminate = false\r\n      }\r\n    }\r\n\r\n    setFieldValue(category, allChecked)\r\n  }\r\n\r\n  const handleToggleAll = () => {\r\n    const isChecked = categoryRef.current.checked\r\n    const itemsIds = items.map(({ id }) => id.toString())\r\n\r\n    const mergedIds = [...new Set([...values.applicable_items, ...itemsIds])]\r\n    const remainingItems = values.applicable_items.filter(\r\n      (item) => itemsIds.indexOf(item) === -1\r\n    )\r\n\r\n    const updatedItems = isChecked ? mergedIds : remainingItems\r\n    setFieldValue('applicable_items', updatedItems)\r\n  }\r\n\r\n  const renderCheckBoxes = items.map(({ id, name }) => (\r\n    <li key={id} className='category-item'>\r\n      <label>\r\n        <Field\r\n          type='checkbox'\r\n          name='applicable_items'\r\n          value={`${id}`}\r\n          data-category={category}\r\n          onClick={handleSelect}\r\n        />\r\n        <span>{name}</span>\r\n      </label>\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <li className='category-header'>\r\n      <label className='category-title'>\r\n        <Field\r\n          type='checkbox'\r\n          name={category}\r\n          innerRef={categoryRef}\r\n          onClick={handleToggleAll}\r\n        />\r\n\r\n        <span>\r\n          <span className={category === 'others' ? 'hidden' : ''}>\r\n            {category}\r\n          </span>\r\n        </span>\r\n      </label>\r\n      <ul className='category-list'>{renderCheckBoxes}</ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default CheckboxGroup\r\n","export const ITEMS = [\r\n  {\r\n    id: 14867,\r\n    name: 'Jasinthe Bracelet',\r\n    category: { id: 14866, name: 'Bracelets', options: {} },\r\n  },\r\n  {\r\n    id: 14865,\r\n    name: 'Jasinthe Bracelet',\r\n    category: { id: 14866, name: 'Bracelets', options: {} },\r\n  },\r\n  {\r\n    id: 14870,\r\n    name: 'Inspire Bracelet',\r\n    category: { id: 14866, name: 'Bracelets', options: {} },\r\n  },\r\n  {\r\n    id: 14869,\r\n    name: 'Zero amount item with questions',\r\n  },\r\n\r\n  {\r\n    id: 14872,\r\n    name: 'Normal item with questions',\r\n  },\r\n  {\r\n    id: 14873,\r\n    name: 'normal item',\r\n  },\r\n]\r\n","const UNITS = {\r\n  one: 1,\r\n  two: 2,\r\n  three: 3,\r\n  four: 4,\r\n  five: 5,\r\n  six: 6,\r\n  seven: 7,\r\n  eight: 8,\r\n  nine: 9,\r\n}\r\n\r\nconst TEENS = {\r\n  ten: 10,\r\n  eleven: 11,\r\n  twelve: 12,\r\n  thirteen: 13,\r\n  fourteen: 14,\r\n  fifteen: 15,\r\n  sixteen: 16,\r\n  seventeen: 17,\r\n  eighteen: 18,\r\n  nineteen: 19,\r\n}\r\n\r\nconst X_TIES = {\r\n  twenty: 20,\r\n  thirty: 30,\r\n  forty: 40,\r\n  fifty: 50,\r\n  sixty: 60,\r\n  seventy: 70,\r\n  eighty: 80,\r\n  ninety: 90,\r\n}\r\n\r\nconst isValidPair = (x, y) => {\r\n  return X_TIES.hasOwnProperty(x) && UNITS.hasOwnProperty(y) && x !== y\r\n}\r\n\r\nconst wordsToNumbers = (input) => {\r\n  const transformedInput = input.trim().toLowerCase()\r\n\r\n  if (!transformedInput || /\\d/.test(transformedInput)) {\r\n    return { error: 'Please enter a valid rate only in words' }\r\n  }\r\n\r\n  if (/zero|hundred|thousand|million/.test(transformedInput)) {\r\n    return {\r\n      error:\r\n        'Minimum/maximum allowable rates are \"one\" and \"ninty-nine\" respectively',\r\n    }\r\n  }\r\n\r\n  const wordsArray = transformedInput.split(/[\\s-]+/)\r\n\r\n  if (wordsArray.length > 2) {\r\n    return {\r\n      error: 'Invalid rate. Only enter a single or double digit rate in words',\r\n    }\r\n  } else if (wordsArray.length === 2) {\r\n    const wordAtFirstIndex = wordsArray[0]\r\n    const wordAtSecondIndex = wordsArray[1]\r\n    if (isValidPair(wordAtFirstIndex, wordAtSecondIndex)) {\r\n      return { number: X_TIES[wordAtFirstIndex] + UNITS[wordAtSecondIndex] }\r\n    } else {\r\n      return {\r\n        error:\r\n          'Hints: Ensure your spellings are correct. Also, only follow a double-digit by a single-digit number. E.g \"twenty one\"',\r\n      }\r\n    }\r\n  } else if (wordsArray.length === 1) {\r\n    const number =\r\n      UNITS[transformedInput] ||\r\n      TEENS[transformedInput] ||\r\n      X_TIES[transformedInput]\r\n\r\n    return number ? { number } : { error: 'Incorrect spelling' }\r\n  }\r\n}\r\n\r\nexport default wordsToNumbers\r\n","import wordsToNumbers from './wordsToNumbers'\r\n\r\nconst validateInputs = (values, totalItems) => {\r\n  const {\r\n    name,\r\n    applicable_items: applicableItems,\r\n    applied_to: appliedTo,\r\n  } = values\r\n\r\n  const errors = {}\r\n  const numberOfApplicableItems = applicableItems.length\r\n\r\n  if (!name) {\r\n    errors.name = 'Please enter a rate'\r\n  }\r\n\r\n  const { error: invalidRate } = name && wordsToNumbers(name)\r\n  if (invalidRate) {\r\n    errors.name = invalidRate\r\n  }\r\n\r\n  if (!appliedTo) {\r\n    errors.applied_to = 'Please choose an option'\r\n  }\r\n  if (appliedTo === 'all' && numberOfApplicableItems !== totalItems) {\r\n    errors.applied_to =\r\n      'You selected \"Apply to all items in collection\" but unchecked some items. Either check all items in each category or choose \"Apply to specific items\" to continue'\r\n  }\r\n\r\n  if (numberOfApplicableItems < 1) {\r\n    errors.applicable_items = 'Please select at least one item in any category'\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport default validateInputs\r\n","export default __webpack_public_path__ + \"static/media/closeIcon.c0c14d4f.svg\";","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport CheckboxGroup from './CheckboxGroup'\r\nimport { ITEMS } from './../utilities/constants'\r\nimport validateInputs from './../utilities/validation'\r\nimport wordsToNumbers from './../utilities/wordsToNumbers'\r\nimport closeIcon from '../images/closeIcon.svg'\r\n\r\nconst allItemsIds = ITEMS.map(({ id }) => id.toString())\r\nconst bracelets = ITEMS.filter((item) => item.category?.name === 'Bracelets')\r\nconst otherItems = ITEMS.filter(({ category }) => !category)\r\nconst totalItems = ITEMS.length\r\n\r\nconst TaxForm = ({ handleSubmit }) => {\r\n  const initialValues = {\r\n    applicable_items: [],\r\n    applied_to: '',\r\n    name: '',\r\n    rate: 0,\r\n    bracelets: false,\r\n    others: false,\r\n    search: '',\r\n  }\r\n\r\n  const handleRateOnBlur = (\r\n    event,\r\n    handleBlur,\r\n    setFieldValue,\r\n    values,\r\n    errors\r\n  ) => {\r\n    handleBlur(event)\r\n    const number = errors.name ? 0 : wordsToNumbers(values.name).number\r\n    setFieldValue('rate', number)\r\n  }\r\n\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n\r\n  return (\r\n    <div className='form-box'>\r\n      <h1 className='form-title'>Add Tax</h1>\r\n      <Formik\r\n        validate={(values) => validateInputs(values, totalItems)}\r\n        initialValues={initialValues}\r\n        onSubmit={async (values) => {\r\n          await sleep(500)\r\n          handleSubmit(values)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          isSubmitting,\r\n          setFieldValue,\r\n          resetForm,\r\n          errors,\r\n          handleBlur,\r\n        }) => (\r\n          <Form>\r\n            <div className='form-group'>\r\n              <div className='form-group__inner'>\r\n                <div role='group' aria-label='rate' className='rate-group'>\r\n                  <div className='rate-inputs'>\r\n                    <Field\r\n                      type='text'\r\n                      name='name'\r\n                      className='rate-input__name'\r\n                      autoComplete='off'\r\n                      aria-label='rate in words'\r\n                      onBlur={(event) =>\r\n                        handleRateOnBlur(\r\n                          event,\r\n                          handleBlur,\r\n                          setFieldValue,\r\n                          values,\r\n                          errors\r\n                        )\r\n                      }\r\n                    />\r\n                    <div className='rate-number-box'>\r\n                      <Field\r\n                        type='text'\r\n                        name='rate'\r\n                        disabled\r\n                        className='rate-input__number'\r\n                        aria-label='rate in number'\r\n                      />\r\n                      <small className='percent-sign'>%</small>\r\n                    </div>\r\n                  </div>\r\n                  <ErrorMessage\r\n                    name='name'\r\n                    className='error'\r\n                    component='small'\r\n                    role='alert'\r\n                  />\r\n                </div>\r\n                <div\r\n                  role='group'\r\n                  aria-label='items to be applied to'\r\n                  className={`radio-group`}\r\n                >\r\n                  <div className={`radio-group__inner`}>\r\n                    <label>\r\n                      <Field\r\n                        type='radio'\r\n                        name='applied_to'\r\n                        value='all'\r\n                        className='radio-button'\r\n                        onClick={() => {\r\n                          setFieldValue('applicable_items', allItemsIds)\r\n                          setFieldValue('bracelets', true)\r\n                          setFieldValue('others', true)\r\n                        }}\r\n                      />\r\n                      <span>Apply to all items in collection</span>\r\n                    </label>\r\n                    <label>\r\n                      <Field\r\n                        type='radio'\r\n                        name='applied_to'\r\n                        value='some'\r\n                        className='radio-button'\r\n                      />\r\n                      <span>Apply to specific items</span>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <ErrorMessage\r\n                    name='applied_to'\r\n                    className='error'\r\n                    component='small'\r\n                    role='alert'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <div className='form-group__inner'>\r\n                <div role='searchbox' className='search-box'>\r\n                  <Field\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder='Search Items'\r\n                    aria-label='search'\r\n                  />\r\n                </div>\r\n                <div\r\n                  role='group'\r\n                  aria-label='applicable items'\r\n                  className='applicable-items-group'\r\n                >\r\n                  <ul>\r\n                    <CheckboxGroup\r\n                      items={bracelets}\r\n                      category='bracelets'\r\n                      setFieldValue={setFieldValue}\r\n                      values={values}\r\n                    />\r\n                    <CheckboxGroup\r\n                      items={otherItems}\r\n                      category='others'\r\n                      setFieldValue={setFieldValue}\r\n                      values={values}\r\n                    />\r\n                  </ul>\r\n                  <ErrorMessage\r\n                    name='applicable_items'\r\n                    className='error'\r\n                    component='small'\r\n                    role='alert'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='button-group'>\r\n              <button\r\n                type='submit'\r\n                disabled={isSubmitting}\r\n                className='btn btn--submit'\r\n              >\r\n                Apply tax to {values.applicable_items.length} item(s)\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn btn--reset'\r\n                onClick={resetForm}\r\n                title='Reset form'\r\n              >\r\n                <img src={closeIcon} alt='reset' width={24} height={24} />\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaxForm\r\n","import React from 'react'\r\nimport TaxForm from './TaxForm'\r\n\r\nconst App = () => {\r\n  const handleSubmit = (values) => {\r\n    const { applicable_items, applied_to, name, rate } = values\r\n\r\n    const payload = {\r\n      applicable_items: applicable_items.map((item) => +item),\r\n      applied_to,\r\n      name: name.trim(),\r\n      rate: rate / 100,\r\n    }\r\n    console.log(payload)\r\n    // await server call with payload as request body\r\n  }\r\n\r\n  return <TaxForm handleSubmit={handleSubmit} />\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './styles/index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}